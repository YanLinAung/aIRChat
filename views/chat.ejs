<% include head %>
<!-- Dialog for connecting to a new server -->
<div class="reveal-modal" id="newServer" data-reveal>
  <h1>Connect to a server</h1>
  <div class="row">
    <div class="small-8 columns">
      <input type="text" placeholder="server address" id="newServerAddr" />
    </div>
  </div>
  <div class="row">
    <div class="small-8 columns">
      <input type="text" placeholder="channel name" id="newServerChannel" />
    </div>
  </div>
  <div class="row">
    <div class="small-8 columns">
      <a href="#" class="success button" id="connectToNewServer">Connect</a>
    </div>
  </div>
  <a class="close-reveal-modal">&#215;</a>
</div>
<!-- Dialog for joining a new channel -->
<div class="reveal-modal" id="newChannel" data-reveal>
  <h1>Join a channel</h1>
  <div class="row">
    <div class="small-8 columns">
      <input type="text" placeholder="channel name" id="newChannelName" />
    </div>
  </div>
  <div class="row">
    <div class="small-8 columns">
      <a href="#" class="success button" id="joinNewChannel">Join</a>
    </div>
  </div>
  <a class="close-reveal-modal">&#215;</a>
</div>
<!-- Dialog for sending a new private message -->
<div class="reveal-modal" id="privMsg" data-reveal>
  <h1>Send a private message</h1>
  <div class="row">
    <div class="small-8 columns">
      <input type="text" placeholder="nickname" id="privMsgNick" />
    </div>
  </div>
  <div class="row">
    <div class="small-8 columns">
      <textarea id="privMsgContents" placeholder="message to user"></textarea>
    </div>
  </div>
  <div class="row">
    <div class="small-8 columns">
      <a href="#" class="success button" id="sendPrivMsg">Send</a>
    </div>
  </div>
  <a class="close-reveal-modal">&#215;</a>
</div>
<!-- Nav bar for chat management -->
<nav class="top-bar" data-topbar>
  <ul class="title-area">
    <li class="name">
      <h1><a href="#">aIRChat</a></h1>
    </li>
  </ul>
  <section class="top-bar-section">
    <ul class="right">
      <li class="divider"></li>
      <li class="has-dropdown">
        <a href="#">Chat</a>
        <ul class="dropdown">
          <li><a href="#" data-reveal-id="newServer">Connect to server</a></li>
          <li><a href="#" data-reveal-id="newChannel">Join a channel</a></li>
          <li><a href="#" data-reveal-id="privMsg">Send a private message</a></li>
        </ul>
      </li>
      <li class="divider"></li>
      <li><a href="/profile">Profile</a></li>
      <li class="divider"></li>
      <li><a href="/logout">Log out</a></li>
    </ul>
  </section>
</nav>
<!-- Chat content -->
<!-- Channel and private message chat listing -->
<dl class="tabs vertical" id="chatList" data-tab>
  <dd><a href="#ctf-portside">ctf-portside</a></dd>
</dl>
<!-- Content of chat -->
<div class="tabs-content vertical" id="chatContent">
  <div class="content" id="ctf-portside">
  </div>
</div>
<div class="row">
  <div class="small-8 columns">
    <textarea id="messageInput" placeholder="Message"></textarea>
  </div>
  <div class="small-4 medium-3 large-3 columns">
    <a href="#" id="sendMessage" class="small button">-&gt;</a>
  </div>
</div>
<script src="/socket.io/socket.io.js"></script>
<script type="text/javascript">
  var hostname = '<%= host %>';
  var socket = io.connect(hostname);
  var connected = false;
  
  // Parallel arrays
  // nickLists[i] contains an array of nicks of users in chats[i].
  var chats = new Array();
  var nickLists = new Array();

  socket.emit('serverJoin', {
    server: 'irc.freenode.net', 
    nick: 'aIRChatBOT',
    firstchannel: '#ctf-portside'
  });

  var addNick = function (nick) {
    $('ul#nickList').append($(
      '<li class="nickListItem" id="nickListItem_' + nick + '>' +
      '  <div>' +
      '    <span>' + nick + '</span>' +
      '  </div>' +
      '</li>'
    ));
  };

  var removeNick = function (nick) {
    $('li#nickListItem_' + nick).remove();
  };

  var addMessage = function (data) {
    $('div#messages').append($(
      '<div class="message">' +
      '  <div class="titlebar">' +
      '    <span>' + data.from + ' in ' + data.channel + '</span>' +
      '  </div>' +
      '  <div class="messageContent">' +
      '    <span>' + data.message + '</span>' +
      '  </div>' +
      '</div>'
    ));
  };

  // Add a new tab to the list of chat tabs and a content div to contain
  // the nick list and messages.
  // addChatSection assumes the new chat has already been pushed to the chats array.
  var addChatSection = function (chanOrNick) {
    $('dl#chatList').append($(
      '<dd><a href="#panel' + chats.length + '">' +
      chanOrNick +
      '</a></dd>'
    ));
    $('div#chatContent').append($(
      '<div class="content" id="panel' + chats.length + '">' +
      '  <ul class="right side-nav">' +
      '  </ul>' +
      '  <div id="messageList_' + chanOrNick + '">' +
      '  </div>' +
      '</div>'
    ));
  };

  socket.on('notifyLow', addMessage);
  socket.on('notifyHigh', addMessage);
  
  socket.on('connected', function (channel) {
    connected = true;
  });
  
  // Create a listing of nicks for the appropriate channel.
  // The list will not be rendered until the channel is the active one.
  socket.on('nickList', function (data) {
    var index = chats.indexOf(data.channel);
    nickLists[index] = data.nicks;
  });

  // Add a new nick to the list of nicks for the provided channel. 
  socket.on('joined', function (data) {
    // TODO
    // Check to see if it is the aIRChat user who has successfully joined,
    // then add a new tab in the chat list for the new channel.
    var index = chats.indexOf(data.channel);
    nickLists[index].push(data.nick);
  });

  // Display a message telling the user they were kicked from the channel.
  // Also deactivate the send mechanism for this channel.
  socket.on('kicked', function (data) {
    addMessage({
      from: 'Kicked by ' + data.by,
      channel: data.channel,
      message: 'Reason provided: ' + data.reason
    });
    // TODO
    // Block the user from trying to send messages to the channel
    // that they were kicked from.
  });

  // Change the nick of a user in the nicklist
  socket.on('newNick', function (data) {
    var $li = $('li#nickListItem_' + data.old);
    $('li#nickListItem_' + data.old + ' div span').text(data.new);
    $li.attr('id', 'nickListItem_' + data.new);

  });
  socket.on('invite', function (data) {
    // Ask the user if they want to join the channel they were invited to
    // data.to, data.by
  });
  socket.on('userLeft', function (data) {
    // Remove a user's nick from the list of nicks
    // data.from, data.nick, data.reason
  });

  $('a#send').click(function (evt) {
    if (connected === false) {
      alert('Please wait until you have finished connecting.');
      return;
    }
    var $ta = $('textarea#input');
    socket.send($ta.val());
    console.log('sent "' + $ta.val() + '"');
    addMessage({channel: '#ctf-portside', from: 'you', message: $ta.val()});
    socket.emit('writeChat', {destination: '#ctf-portside', message: $ta.val()});
    $ta.val('');
  });
</script>
<% include foot %>
